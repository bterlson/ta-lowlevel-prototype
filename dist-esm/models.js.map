{"version":3,"file":"models.js","sourceRoot":"","sources":["../src/models.ts"],"names":[],"mappings":"","sourcesContent":["export type AnalyzeBatchInput = AnalyzeBatchInputBase &\r\n  JobDescriptor &\r\n  JobManifest;\r\n\r\ninterface AnalyzeBatchInputBase {\r\n  analysisInput: MultiLanguageBatchInput;\r\n}\r\n\r\nexport interface MultiLanguageBatchInput {\r\n  documents: TextDocumentInput[];\r\n}\r\n\r\nexport interface TextDocumentInput {\r\n  id: string;\r\n  text: string;\r\n  language?: string;\r\n}\r\n\r\nexport interface JobDescriptor {\r\n  displayName?: string;\r\n}\r\n\r\nexport interface JobManifest {\r\n  tasks: JobManifestTasks;\r\n}\r\n\r\nexport interface JobManifestTasks {\r\n  entityRecognitionTasks?: EntitiesTask[];\r\n  entityRecognitionPiiTasks?: PiiTask[];\r\n  keyPhraseExtractionTasks?: KeyPhrasesTask[];\r\n}\r\n\r\nexport interface EntitiesTask {\r\n  parameters?: EntitiesTaskParameters;\r\n}\r\n\r\nexport interface EntitiesTaskParameters {\r\n  modelVersion?: string;\r\n  stringIndexType?: StringIndexTypeResponse;\r\n}\r\n\r\nexport interface PiiTask {\r\n  parameters?: PiiTaskParameters;\r\n}\r\n\r\nexport interface PiiTaskParameters {\r\n  domain?: PiiTaskParametersDomain;\r\n  modelVersion?: string;\r\n  stringIndexType?: StringIndexTypeResponse;\r\n}\r\n\r\nexport interface KeyPhrasesTask {\r\n  parameters?: KeyPhrasesTaskParameters;\r\n}\r\n\r\nexport interface KeyPhrasesTaskParameters {\r\n  modelVersion?: string;\r\n}\r\n\r\nexport interface ErrorResponse {\r\n  error: TextAnalyticsError;\r\n}\r\n\r\nexport interface TextAnalyticsError {\r\n  code: ErrorCodeValue;\r\n  message: string;\r\n  target?: string;\r\n  innererror?: InnerError;\r\n  details?: TextAnalyticsError[];\r\n}\r\n\r\nexport interface InnerError {\r\n  code: InnerErrorCodeValue;\r\n  message: string;\r\n  details?: InnerErrorDetails;\r\n  target?: string;\r\n  innererror?: InnerError;\r\n}\r\n\r\nexport type AnalyzeJobState = AnalyzeJobStateBase &\r\n  JobMetadata &\r\n  TasksState &\r\n  Pagination;\r\n\r\ninterface AnalyzeJobStateBase {\r\n  errors?: TextAnalyticsError[];\r\n  statistics?: TextDocumentBatchStatistics;\r\n}\r\n\r\nexport interface TextDocumentBatchStatistics {\r\n  documentCount: number;\r\n  validDocumentCount: number;\r\n  erroneousDocumentCount: number;\r\n  transactionCount: number;\r\n}\r\n\r\nexport interface JobMetadata {\r\n  createdDateTime: Date;\r\n  displayName?: string;\r\n  expirationDateTime?: Date;\r\n  jobId: string;\r\n  lastUpdateDateTime: Date;\r\n  status: State;\r\n}\r\n\r\nexport interface TasksState {\r\n  tasks: TasksStateTasks;\r\n}\r\n\r\nexport interface TasksStateTasks {\r\n  details?: TasksStateTasksDetails;\r\n  completed: number;\r\n  failed: number;\r\n  inProgress: number;\r\n  total: number;\r\n  entityRecognitionTasks?: TasksStateTasksEntityRecognitionTasksItem[];\r\n  entityRecognitionPiiTasks?: TasksStateTasksEntityRecognitionPiiTasksItem[];\r\n  keyPhraseExtractionTasks?: TasksStateTasksKeyPhraseExtractionTasksItem[];\r\n}\r\n\r\nexport type TasksStateTasksDetails = TasksStateTasksDetailsBase & TaskState;\r\n\r\ninterface TasksStateTasksDetailsBase {}\r\n\r\nexport interface TaskState {\r\n  lastUpdateDateTime: Date;\r\n  name?: string;\r\n  status: State;\r\n}\r\n\r\nexport type TasksStateTasksEntityRecognitionTasksItem = TasksStateTasksEntityRecognitionTasksItemBase &\r\n  TaskState &\r\n  Components15Gvwi3SchemasTasksstatePropertiesTasksPropertiesEntityrecognitiontasksItemsAllof1;\r\n\r\ninterface TasksStateTasksEntityRecognitionTasksItemBase {}\r\n\r\nexport interface Components15Gvwi3SchemasTasksstatePropertiesTasksPropertiesEntityrecognitiontasksItemsAllof1 {\r\n  results: EntitiesResult;\r\n}\r\n\r\nexport interface EntitiesResult {\r\n  documents: DocumentEntities[];\r\n  errors: DocumentError[];\r\n  statistics?: TextDocumentBatchStatistics;\r\n  modelVersion: string;\r\n}\r\n\r\nexport interface DocumentEntities {\r\n  id: string;\r\n  entities: Entity[];\r\n  warnings: TextAnalyticsWarning[];\r\n  statistics?: TextDocumentStatistics;\r\n}\r\n\r\nexport interface Entity {\r\n  text: string;\r\n  category: string;\r\n  subCategory?: string;\r\n  offset: number;\r\n  confidenceScore: number;\r\n}\r\n\r\nexport interface TextAnalyticsWarning {\r\n  code: WarningCode;\r\n  message: string;\r\n}\r\n\r\nexport interface TextDocumentStatistics {\r\n  characterCount: number;\r\n  transactionCount: number;\r\n}\r\n\r\nexport interface DocumentError {\r\n  id: string;\r\n  error: TextAnalyticsError;\r\n}\r\n\r\nexport type TasksStateTasksEntityRecognitionPiiTasksItem = TasksStateTasksEntityRecognitionPiiTasksItemBase &\r\n  TaskState &\r\n  Components15X8E9LSchemasTasksstatePropertiesTasksPropertiesEntityrecognitionpiitasksItemsAllof1;\r\n\r\ninterface TasksStateTasksEntityRecognitionPiiTasksItemBase {}\r\n\r\nexport interface Components15X8E9LSchemasTasksstatePropertiesTasksPropertiesEntityrecognitionpiitasksItemsAllof1 {\r\n  results: PiiResult;\r\n}\r\n\r\nexport interface PiiResult {\r\n  documents: PiiDocumentEntities[];\r\n  errors: DocumentError[];\r\n  statistics?: TextDocumentBatchStatistics;\r\n  modelVersion: string;\r\n}\r\n\r\nexport interface PiiDocumentEntities {\r\n  id: string;\r\n  redactedText: string;\r\n  entities: Entity[];\r\n  warnings: TextAnalyticsWarning[];\r\n  statistics?: TextDocumentStatistics;\r\n}\r\n\r\nexport type TasksStateTasksKeyPhraseExtractionTasksItem = TasksStateTasksKeyPhraseExtractionTasksItemBase &\r\n  TaskState &\r\n  Components1D9IzucSchemasTasksstatePropertiesTasksPropertiesKeyphraseextractiontasksItemsAllof1;\r\n\r\ninterface TasksStateTasksKeyPhraseExtractionTasksItemBase {}\r\n\r\nexport interface Components1D9IzucSchemasTasksstatePropertiesTasksPropertiesKeyphraseextractiontasksItemsAllof1 {\r\n  results: KeyPhraseResult;\r\n}\r\n\r\nexport interface KeyPhraseResult {\r\n  documents: DocumentKeyPhrases[];\r\n  errors: DocumentError[];\r\n  statistics?: TextDocumentBatchStatistics;\r\n  modelVersion: string;\r\n}\r\n\r\nexport interface DocumentKeyPhrases {\r\n  id: string;\r\n  keyPhrases: string[];\r\n  warnings: TextAnalyticsWarning[];\r\n  statistics?: TextDocumentStatistics;\r\n}\r\n\r\nexport interface Pagination {\r\n  nextLink?: string;\r\n}\r\n\r\nexport type HealthcareJobState = HealthcareJobStateBase &\r\n  JobMetadata &\r\n  Pagination;\r\n\r\ninterface HealthcareJobStateBase {\r\n  results?: HealthcareResult;\r\n  errors?: TextAnalyticsError[];\r\n}\r\n\r\nexport interface HealthcareResult {\r\n  documents: DocumentHealthcareEntities[];\r\n  errors: DocumentError[];\r\n  statistics?: TextDocumentBatchStatistics;\r\n  modelVersion: string;\r\n}\r\n\r\nexport interface DocumentHealthcareEntities {\r\n  id: string;\r\n  entities: HealthcareEntity[];\r\n  relations: HealthcareRelation[];\r\n  warnings: TextAnalyticsWarning[];\r\n  statistics?: TextDocumentStatistics;\r\n}\r\n\r\nexport type HealthcareEntity = HealthcareEntityBase & Entity;\r\n\r\ninterface HealthcareEntityBase {\r\n  isNegated: boolean;\r\n  links?: HealthcareEntityLink[];\r\n}\r\n\r\nexport interface HealthcareEntityLink {\r\n  dataSource: string;\r\n  id: string;\r\n}\r\n\r\nexport interface HealthcareRelation {\r\n  relationType: string;\r\n  bidirectional: boolean;\r\n  source: string;\r\n  target: string;\r\n}\r\n\r\nexport interface EntityLinkingResult {\r\n  documents: DocumentLinkedEntities[];\r\n  errors: DocumentError[];\r\n  statistics?: TextDocumentBatchStatistics;\r\n  modelVersion: string;\r\n}\r\n\r\nexport interface DocumentLinkedEntities {\r\n  id: string;\r\n  entities: LinkedEntity[];\r\n  warnings: TextAnalyticsWarning[];\r\n  statistics?: TextDocumentStatistics;\r\n}\r\n\r\nexport interface LinkedEntity {\r\n  name: string;\r\n  matches: Match[];\r\n  language: string;\r\n  dataSourceEntityId?: string;\r\n  url: string;\r\n  dataSource: string;\r\n  bingEntitySearchApiId?: string;\r\n}\r\n\r\nexport interface Match {\r\n  confidenceScore: number;\r\n  text: string;\r\n  offset: number;\r\n}\r\n\r\nexport interface LanguageBatchInput {\r\n  documents: DetectLanguageInput[];\r\n}\r\n\r\nexport interface DetectLanguageInput {\r\n  id: string;\r\n  text: string;\r\n  countryHint?: string;\r\n}\r\n\r\nexport interface LanguageResult {\r\n  documents: DocumentLanguage[];\r\n  errors: DocumentError[];\r\n  statistics?: TextDocumentBatchStatistics;\r\n  modelVersion: string;\r\n}\r\n\r\nexport interface DocumentLanguage {\r\n  id: string;\r\n  detectedLanguage: DetectedLanguage;\r\n  warnings: TextAnalyticsWarning[];\r\n  statistics?: TextDocumentStatistics;\r\n}\r\n\r\nexport interface DetectedLanguage {\r\n  name: string;\r\n  iso6391Name: string;\r\n  confidenceScore: number;\r\n}\r\n\r\nexport interface SentimentResponse {\r\n  documents: DocumentSentiment[];\r\n  errors: DocumentError[];\r\n  statistics?: TextDocumentBatchStatistics;\r\n  modelVersion: string;\r\n}\r\n\r\nexport interface DocumentSentiment {\r\n  id: string;\r\n  sentiment: DocumentSentimentLabel;\r\n  statistics?: TextDocumentStatistics;\r\n  confidenceScores: SentimentConfidenceScores;\r\n  sentenceSentiments: SentenceSentiment[];\r\n  warnings: TextAnalyticsWarning[];\r\n}\r\n\r\nexport interface SentimentConfidenceScores {\r\n  positive: number;\r\n  neutral: number;\r\n  negative: number;\r\n}\r\n\r\nexport interface SentenceSentiment {\r\n  text: string;\r\n  sentiment: SentenceSentimentLabel;\r\n  confidenceScores: SentimentConfidenceScores;\r\n  offset: number;\r\n  aspects?: SentenceAspect[];\r\n  opinions?: SentenceOpinion[];\r\n}\r\n\r\nexport interface SentenceAspect {\r\n  sentiment: TokenSentimentValue;\r\n  confidenceScores: AspectConfidenceScoreLabel;\r\n  offset: number;\r\n  text: string;\r\n  relations: AspectRelation[];\r\n}\r\n\r\nexport interface AspectConfidenceScoreLabel {\r\n  positive: number;\r\n  negative: number;\r\n}\r\n\r\nexport interface AspectRelation {\r\n  relationType: AspectRelationType;\r\n  ref: string;\r\n}\r\n\r\nexport interface SentenceOpinion {\r\n  sentiment: TokenSentimentValue;\r\n  confidenceScores: AspectConfidenceScoreLabel;\r\n  offset: number;\r\n  text: string;\r\n  isNegated: boolean;\r\n}\r\n\r\nexport type PiiTaskParametersDomain = string;\r\nexport type InnerErrorCodeValue = string;\r\nexport type WarningCode = string;\r\nexport type StringIndexType = string;\r\nexport type StringIndexTypeResponse =\r\n  | \"TextElements_v8\"\r\n  | \"UnicodeCodePoint\"\r\n  | \"Utf16CodeUnit\";\r\nexport type ErrorCodeValue =\r\n  | \"InvalidRequest\"\r\n  | \"InvalidArgument\"\r\n  | \"InternalServerError\"\r\n  | \"ServiceUnavailable\"\r\n  | \"NotFound\";\r\nexport type State =\r\n  | \"notStarted\"\r\n  | \"running\"\r\n  | \"succeeded\"\r\n  | \"failed\"\r\n  | \"rejected\"\r\n  | \"cancelled\"\r\n  | \"cancelling\"\r\n  | \"partiallyCompleted\"\r\n  | \"partiallySucceeded\";\r\nexport type DocumentSentimentLabel =\r\n  | \"positive\"\r\n  | \"neutral\"\r\n  | \"negative\"\r\n  | \"mixed\";\r\nexport type SentenceSentimentLabel = \"positive\" | \"neutral\" | \"negative\";\r\nexport type TokenSentimentValue = \"positive\" | \"mixed\" | \"negative\";\r\nexport type AspectRelationType = \"opinion\" | \"aspect\";\r\nexport type InnerErrorDetails = { [key: string]: string };\r\n"]}